<%- include('../partials/users/header') %>
    <style>
        /* Main theme colors - black and white */
        body {
            background-color: #f8f9fc;
        }
        
        .card {
            border: 1px solid #ddd;
            box-shadow: 0 0.15rem 1.75rem rgba(0, 0, 0, 0.15);
        }
        
        .btn_2 {
            background: linear-gradient(45deg, #000000, #333333);
            color: white !important;
            border: none;
            padding: 8px 15px;
            border-radius: 5px;
            cursor: pointer;
            text-decoration: none;
            display: inline-block;
            transition: all 0.3s;
        }
        
        .btn_2:hover {
            background: linear-gradient(45deg, #333333, #000000);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }
        
        /* Status badges - smaller size and with colors */
        .status-delivered {
            background-color: #28a745;
            color: white;
        }

        .status-pending {
            background-color: #ffc107;
            color: black;
        }
        
        .status-payment-pending {
            background-color: #fd7e14;
            color: white;
        }

        .status-processing {
            background-color: #17a2b8;
            color: white;
        }

        .status-cancelled {
            background-color: #dc3545;
            color: white;
        }

        .status-returned {
            background-color: #6c757d;
            color: white;
        }

        .status-badge {
            padding: 0.25rem 0.5rem;  /* Reduced size */
            border-radius: 0.25rem;
            font-weight: 500;
            font-size: 0.75rem;  /* Smaller font */
            display: inline-block;
        }

        /* Wallet styles */
        .wallet-balance-card {
            background: linear-gradient(45deg, #000000, #333333) !important;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        }

        .modal-body .transaction-list {
            border: 1px solid #e3e6f0;
            border-radius: 0.35rem;
        }

        .modal-body .transaction-item:last-child {
            border-bottom: none !important;
        }

        .wallet-details {
            padding: 1rem;
        }

        .modal-dialog {
            max-width: 700px;
        }
        
        /* Scrollable orders list */
        .orders-container {
            max-height: 500px;
            overflow-y: auto;
            border: 1px solid #e3e6f0;
            border-radius: 0.35rem;
        }
        
        .order-item {
            border-bottom: 1px solid #e3e6f0;
            padding: 15px;
            transition: background-color 0.2s;
        }
        
        .order-item:hover {
            background-color: #f8f9fc;
        }
        
        .order-item:last-child {
            border-bottom: none;
        }
        
        /* User avatar and info styling */
        .user_avatar img {
            border: 3px solid #000;
            padding: 3px;
        }
        
        .user_info h4 {
            color: #000;
            font-weight: 600;
        }
        
        /* Custom scrollbar */
        .orders-container::-webkit-scrollbar {
            width: 6px;
        }
        
        .orders-container::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 10px;
        }
        
        .orders-container::-webkit-scrollbar-thumb {
            background: #888;
            border-radius: 10px;
        }
        
        .orders-container::-webkit-scrollbar-thumb:hover {
            background: #555;
        }
        
        /* Active nav item */
        .nav-link.active {
            background-color: #000 !important;
            color: white !important;
            border-radius: 5px;
        }
        
        /* Nav links */
        .nav-link {
            color: #000;
            transition: all 0.3s;
        }
        
        .nav-link:hover {
            background-color: #f8f9fc;
        }

        .pagination-container .btn_2 {
    padding: 5px 10px;
    margin: 0 5px;
}

.pagination-container .btn-dark {
    background: #000;
    color: white;
    padding: 5px 10px;
    margin: 0 5px;
}

.pagination-container .btn_2:hover,
.pagination-container .btn-dark:hover {
    opacity: 0.9;
}

.pagination-container .btn_2 {
    padding: 5px 10px;
    margin: 0 5px;
}

.pagination-container .btn-dark {
    background: #000;
    color: white;
    padding: 5px 10px;
    margin: 0 5px;
}

.pagination-container .btn_2:hover,
.pagination-container .btn-dark:hover {
    opacity: 0.9;
}
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <section class="profile_section padding_top">
        <div class="container">
            <div class="row">
                <!-- Profile Navigation Sidebar -->
                <div class="col-lg-3">
                    <div class="profile_nav card">
                        <div class="card-body">
                            <div class="user_info text-center mb-4">
                                <div class="user_avatar mb-3 text-center">
                                    <img id="selectedAvatar" 
                                         src="<%= user.avatar || 'https://cdn-icons-png.flaticon.com/512/149/149071.png' %>" 
                                         alt="User Avatar" 
                                         class="rounded-circle" 
                                         style="width: 100px; height: 100px; display: block; margin: auto;">
                                </div>
                                
                                <!-- Avatar Selection Dropdown -->
                                <div class="dropdown text-center">
                                    <button class="btn btn-light dropdown-toggle" type="button" id="avatarDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                        Select Avatar
                                    </button>
                                    <ul class="dropdown-menu" aria-labelledby="avatarDropdown">
                                        <li><a class="dropdown-item avatar-option" data-avatar="https://cdn-icons-png.flaticon.com/512/149/149071.png">Default Grey</a></li>
                                        <li><a class="dropdown-item avatar-option" data-avatar="https://cdn-icons-png.flaticon.com/512/4140/4140047.png">Avatar 1</a></li>
                                        <li><a class="dropdown-item avatar-option" data-avatar="https://cdn-icons-png.flaticon.com/512/4140/4140061.png">Avatar 2</a></li>
                                        <li><a class="dropdown-item avatar-option" data-avatar="https://cdn-icons-png.flaticon.com/512/4140/4140084.png">Avatar 3</a></li>
                                    </ul>
                                </div>
                                
                                <script>
                                    document.querySelectorAll('.avatar-option').forEach(item => {
                                        item.addEventListener('click', function() {
                                            const selectedAvatarUrl = this.getAttribute('data-avatar');
                                            document.getElementById('selectedAvatar').src = selectedAvatarUrl;
                                        });
                                    });
                                </script>
                                
                                
                                
                                <h4>
                                    <%= user.name %>
                                </h4>
                            </div>
                            <ul class="nav flex-column">
                                <li class="nav-item">
                                    <a class="nav-link active" href="#profile" data-toggle="tab">My Profile</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" href="#orders" data-toggle="tab">My Orders</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" href="#address" data-toggle="tab">Address Book</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" href="/change-password">Change Password</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" href="#wallet" data-toggle="tab">My Wallet</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>

                <!-- Profile Content Area -->
                <div class="col-lg-9">
                    <div class="tab-content">
                        <!-- Profile Details Tab -->
                        <div class="tab-pane fade show active" id="profile">
                            <div class="card">
                                <div class="card-header d-flex justify-content-between align-items-center" style="background-color: #f8f9fc; border-bottom: 1px solid #e3e6f0;">
                                    <h4 class="mb-0">Profile Details</h4>
                                </div>
                                <div class="card-body">
                                    <!-- User Details Section -->
                                    <div class="user-details">
                                        <p><strong>Name:</strong>
                                            <%= user.name %>
                                        </p>
                                        <p><strong>Email:</strong>
                                            <%= user.email %>
                                        </p>
                                        <p><strong>Phone Number:</strong>
                                            <%= user.phone %>
                                        </p>

                                        <!-- Referral Code Section -->
                                        <div class="d-flex align-items-center mt-3">
                                            <strong>Referral Code:</strong>
                                            <input type="text" id="referralCode" class="form-control ml-2"
                                                value="<%= user.referalCode || '' %>" readonly
                                                style="max-width: 150px; margin-left: 10px;">

                                            <!-- Copy Button -->
                                            <button class="btn btn-sm btn-dark ml-2" onclick="copyReferralCode()">
                                                <i class="fas fa-copy"></i>
                                            </button>
                                        </div>
                                    </div>

                                    <!-- Edit Buttons Section -->
                                    <div class="edit-buttons mt-3">
                                        <button class="btn_2" style="margin-right: 10px;">
                                            <a style="text-decoration: none; color: white;" href="/update-email">Edit
                                                Email</a>
                                        </button>
                                        <button class="btn_2">
                                            <a style="text-decoration: none; color: white;" href="/update-name">Edit
                                                Name</a>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Orders Tab -->
                        <div class="tab-pane fade" id="orders">
                            <div class="card">
                                <div class="card-header" style="background-color: #f8f9fc; border-bottom: 1px solid #e3e6f0;">
                                    <h4 class="mb-0">My Orders</h4>
                                </div>
                                <div class="card-body">
                                    <!-- Orders container with scroll -->
                                    <div class="orders-container" id="ordersContainer">
                                        <% if (orders && orders.length > 0) { %>
                                            <% orders.forEach(item => { %>
                                                <div class="order-item">
                                                    <div class="d-flex justify-content-between align-items-center">
                                                        <div>
                                                            <h5>Order <%=item.orderId%></h5>
                                                            <p class="mb-1">Date: <%=item.createdAt%></p>
                                                            <p class="mb-1">Status:
                                                                <span class="status-badge <%= 
                                                                    item.status.toLowerCase() === 'delivered' ? 'status-delivered' :
                                                                    item.status.toLowerCase() === 'pending' ? 'status-pending' :
                                                                    item.status.toLowerCase() === 'processing' ? 'status-processing' :
                                                                    item.status.toLowerCase() === 'cancelled' ? 'status-cancelled' :
                                                                    item.status.toLowerCase() === 'returned' ? 'status-returned' :
                                                                    item.status.toLowerCase() === 'payment pending' ? 'status-payment-pending' : ''
                                                                %>">
                                                                    <%=item.status%>
                                                                </span>
                                                            </p>
                                                        </div>
                                                        <div>
                                                            <h5>₹<%=item.finalAmount.toFixed(2)%></h5>
                                                            <button class="btn_2" onclick="viewOrderDetails('<%=item.orderId%>')">View Details</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            <% }) %>
                                        <% } else { %>
                                            <div class="text-center py-4">
                                                <i class="fas fa-shopping-bag fa-3x text-muted mb-3"></i>
                                                <p class="mb-0">No orders found</p>
                                            </div>
                                        <% } %>
                                    </div>
    
                                    <!-- Pagination -->
                                    <% if (totalPages > 1) { %>
                                        <div class="pagination-container" style="margin-top: 20px; text-align: center;" id="paginationContainer">
                                            <% if (currentPage > 1) { %>
                                                <button class="btn btn-sm btn_2 mr-2" onclick="loadOrders(<%= currentPage - 1 %>)">« Previous</button>
                                            <% } %>
    
                                            <% for (let i = 1; i <= totalPages; i++) { %>
                                                <% if (i === currentPage) { %>
                                                    <span class="btn btn-sm btn-dark mx-1" style="cursor: default;">
                                                        <%= i %>
                                                    </span>
                                                <% } else { %>
                                                    <button class="btn btn-sm btn_2 mx-1" onclick="loadOrders(<%= i %>)">
                                                        <%= i %>
                                                    </button>
                                                <% } %>
                                            <% } %>
    
                                            <% if (currentPage < totalPages) { %>
                                                <button class="btn btn-sm btn_2 ml-2" onclick="loadOrders(<%= currentPage + 1 %>)">Next »</button>
                                            <% } %>
                                        </div>
                                    <% } %>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Address Tab -->
                        <div class="tab-pane fade" id="address">
                            <div class="card">
                                <div class="card-header d-flex justify-content-between align-items-center" style="background-color: #f8f9fc; border-bottom: 1px solid #e3e6f0;">
                                    <h4 class="mb-0">Address Book</h4>
                                    <a href="/addAddress" class="btn_2">Add New Address</a>
                                </div>
                                <div class="card-body">
                                    <% if (userAddress && userAddress.address && userAddress.address.length> 0) { %>
                                        <% userAddress.address.forEach(function(addressItem) { %>
                                            <div class="card mb-3">
                                                <div class="card-body">
                                                    <h5>
                                                        <%= addressItem.addressType %>
                                                    </h5>
                                                    <p>
                                                        <%= addressItem.name %>
                                                    </p>
                                                    <p>
                                                        <%= addressItem.landMark %>
                                                    </p>
                                                    <p>
                                                        <%= addressItem.city %>
                                                    </p>
                                                    <p>
                                                        <%= addressItem.state %>
                                                    </p>
                                                    <p>
                                                        <%= addressItem.pincode %>
                                                    </p>
                                                    <div class="mt-3">
                                                        <a href="/editAddress?id=<%= addressItem._id %>"
                                                            class="btn btn-sm btn-outline-dark mr-2">Edit</a>
                                                        <a href="#" class="btn btn-sm btn-dark" onclick="confirmDelete('<%= addressItem._id %>')">Delete</a>
                                                    </div>
                                                </div>
                                            </div>
                                        <% }); %>
                                    <% } else { %>
                                        <p class="text-center">No address found. Add a new address.</p>
                                    <% } %>
                                </div>
                            </div>
                        </div>

                        <!-- Wallet Tab -->
                        <div class="tab-pane fade" id="wallet">
                            <div class="card">
                                <div class="card-header d-flex justify-content-between align-items-center" style="background-color: #f8f9fc; border-bottom: 1px solid #e3e6f0;">
                                    <h4 class="mb-0">My Wallet</h4>
                                    <button class="btn_2" data-toggle="modal" data-target="#walletModal">
                                        View Details
                                    </button>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="wallet-balance-card text-white p-4 rounded">
                                                <div class="d-flex align-items-center mb-3">
                                                    <i class="fas fa-wallet fa-2x mr-3"></i>
                                                    <div>
                                                        <h6 class="mb-1" style="color: white;">Available Balance</h6>
                                                        <h3 class="mb-0" style="color: white;">
                                                            ₹<%= (wallet?.[0]?.balance !==undefined &&
                                                                wallet?.[0]?.balance !==null) ?
                                                                wallet[0].balance.toFixed(2) : '0.00' %>
                                                        </h3>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Wallet Modal -->
                        <div class="modal fade" id="walletModal" tabindex="-1" role="dialog"
                            aria-labelledby="walletModalLabel" aria-hidden="true">
                            <div class="modal-dialog modal-lg" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="walletModalLabel">Wallet Details</h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <div class="wallet-details">
                                            <div class="wallet-balance-card text-white p-4 rounded mb-4">
                                                <div class="d-flex align-items-center">
                                                    <i class="fas fa-wallet fa-3x mr-3"></i>
                                                    <div>
                                                        <h6 class="mb-1" style="color: white;">Available Balance</h6>
                                                        <h2 class="mb-0" style="color: white;">₹
                                                            <%= (wallet && wallet[0] && typeof
                                                                wallet[0].balance==='number' ) ?
                                                                wallet[0].balance.toFixed(2) : '0.00' %>
                                                        </h2>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="transaction-history">
                                                <h5 class="mb-3">Transaction History</h5>
                                                <div class="transaction-list"
                                                    style="max-height: 400px; overflow-y: auto;">
                                                    <% if (wallet && wallet[0] && wallet[0].transactions &&
                                                        Array.isArray(wallet[0].transactions) &&
                                                        wallet[0].transactions.length> 0) {
                                                        try {
                                                        const sortedTransactions = wallet[0].transactions.sort((a, b) =>
                                                        {
                                                        const dateA = new Date(a.date || 0);
                                                        const dateB = new Date(b.date || 0);
                                                        return dateB - dateA;
                                                        });
                                                        %>
                                                        <% sortedTransactions.forEach(transaction=> {
                                                            if (transaction && typeof transaction === 'object') {
                                                            %>
                                                            <div class="transaction-item border-bottom p-3">
                                                                <div
                                                                    class="d-flex justify-content-between align-items-center">
                                                                    <div class="d-flex align-items-center">
                                                                        <i
                                                                            class="<%= (transaction.type === 'credit' ? 'fas fa-arrow-down text-success' : 'fas fa-arrow-up text-danger') %> fa-lg mr-3"></i>
                                                                        <div>
                                                                            <h6 class="mb-1">
                                                                                <%= transaction.description
                                                                                    || 'Transaction' %>
                                                                            </h6>
                                                                            <small class="text-muted">
                                                                                <%= transaction.date ? new
                                                                                    Date(transaction.date).toLocaleDateString()
                                                                                    : 'Date not available' %>
                                                                            </small>
                                                                        </div>
                                                                    </div>
                                                                    <div
                                                                        class="text-<%= transaction.type === 'credit' ? 'success' : 'danger' %>">
                                                                        <%= transaction.type==='credit' ? '+' : '-' %>₹
                                                                            <%= typeof transaction.amount==='number' ?
                                                                                transaction.amount.toFixed(2) : '0.00'
                                                                                %>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <% }}) %>
                                                                <% } catch (error) { %>
                                                                    <div class="text-center py-4">
                                                                        <i class="fas fa-exclamation-circle fa-3x text-warning mb-3"></i>
                                                                        <p class="mb-0">Error loading transaction data</p>
                                                                    </div>
                                                                    <% } } else { %>
                                                                        <div class="text-center py-4">
                                                                            <i class="fas fa-history fa-3x text-muted mb-3"></i>
                                                                            <p class="mb-0">No transactions found</p>
                                                                        </div>
                                                                        <% } %>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-dark" data-dismiss="modal">Close</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    // <script>
    //     function copyReferralCode() {
    //         let referralInput = document.getElementById("referralCode");

    //         if (!referralInput.value) {
    //             Swal.fire({
    //                 icon: "warning",
    //                 title: "No Referral Code",
    //                 text: "There is no referral code available to copy.",
    //             });
    //             return;
    //         }

    //         referralInput.select();
    //         document.execCommand("copy");

    //         Swal.fire({
    //             icon: "success",
    //             title: "Copied!",
    //             text: "Referral Code has been copied to clipboard.",
    //             showConfirmButton: false,
    //             timer: 1500
    //         });
    //     }

    //     function confirmDelete(addressId) {
    //         Swal.fire({
    //             title: 'Are you sure?',
    //             text: 'This action cannot be undone.',
    //             icon: 'warning',
    //             showCancelButton: true,
    //             confirmButtonColor: '#000',
    //             cancelButtonColor: '#6c757d',
    //             confirmButtonText: 'Yes, delete it!'
    //         }).then((result) => {
    //             if (result.isConfirmed) {
    //                 fetch(`/deleteAddress/${addressId}`, {
    //                     method: 'DELETE',
    //                     headers: {
    //                         'Content-Type': 'application/json',
    //                     }
    //                 })
    //                 .then(response => {
    //                     if (response.ok) {
    //                         Swal.fire(
    //                             'Deleted!',
    //                             'The address has been deleted.',
    //                             'success'
    //                         ).then(() => {
    //                             window.location.href = '/Profile';
    //                         });
    //                     } else {
    //                         Swal.fire(
    //                             'Error!',
    //                             'Failed to delete the address.',
    //                             'error'
    //                         );
    //                     }
    //                 })
    //                 .catch(error => {
    //                     console.error('Error:', error);
    //                     Swal.fire(
    //                         'Error!',
    //                         error.message||'An error occurred.',
    //                         'error'
    //                     );
    //                 });
    //             }
    //         });
    //     }

    //     function viewOrderDetails(orderId) {
    //         window.location.href = `/order-details/${orderId}`;
    //     }
    // </script>



    <script>
    // Function to load orders dynamically via AJAX
    function loadOrders(page) {
        fetch(`/Profile?page=${page}`, {
            headers: {
                'X-Requested-With': 'XMLHttpRequest' // Indicate this is an AJAX request
            }
        })
        .then(response => response.json())
        .then(data => {
            // Update the orders container
            const ordersContainer = document.getElementById('ordersContainer');
            ordersContainer.innerHTML = ''; // Clear existing content

            if (data.orders && data.orders.length > 0) {
                data.orders.forEach(item => {
                    const statusClass = item.status.toLowerCase() === 'delivered' ? 'status-delivered' :
                        item.status.toLowerCase() === 'pending' ? 'status-pending' :
                        item.status.toLowerCase() === 'processing' ? 'status-processing' :
                        item.status.toLowerCase() === 'cancelled' ? 'status-cancelled' :
                        item.status.toLowerCase() === 'returned' ? 'status-returned' :
                        item.status.toLowerCase() === 'payment pending' ? 'status-payment-pending' : '';

                    const orderHtml = `
                        <div class="order-item">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <h5>Order ${item.orderId}</h5>
                                    <p class="mb-1">Date: ${new Date(item.createdAt).toLocaleString()}</p>
                                    <p class="mb-1">Status:
                                        <span class="status-badge ${statusClass}">${item.status}</span>
                                    </p>
                                </div>
                                <div>
                                    <h5>₹${item.finalAmount.toFixed(2)}</h5>
                                    <button class="btn_2" onclick="viewOrderDetails('${item.orderId}')">View Details</button>
                                </div>
                            </div>
                        </div>
                    `;
                    ordersContainer.innerHTML += orderHtml;
                });
            } else {
                ordersContainer.innerHTML = `
                    <div class="text-center py-4">
                        <i class="fas fa-shopping-bag fa-3x text-muted mb-3"></i>
                        <p class="mb-0">No orders found</p>
                    </div>
                `;
            }

            // Update the pagination container
            const paginationContainer = document.getElementById('paginationContainer');
            paginationContainer.innerHTML = ''; // Clear existing pagination

            if (data.totalPages > 1) {
                let paginationHtml = '';

                if (data.currentPage > 1) {
                    paginationHtml += `<button class="btn btn-sm btn_2 mr-2" onclick="loadOrders(${data.currentPage - 1})">« Previous</button>`;
                }

                for (let i = 1; i <= data.totalPages; i++) {
                    if (i === data.currentPage) {
                        paginationHtml += `<span class="btn btn-sm btn-dark mx-1" style="cursor: default;">${i}</span>`;
                    } else {
                        paginationHtml += `<button class="btn btn-sm btn_2 mx-1" onclick="loadOrders(${i})">${i}</button>`;
                    }
                }

                if (data.currentPage < data.totalPages) {
                    paginationHtml += `<button class="btn btn-sm btn_2 ml-2" onclick="loadOrders(${data.currentPage + 1})">Next »</button>`;
                }

                paginationContainer.innerHTML = paginationHtml;
            }

            // Ensure the orders tab remains active
            document.querySelector('.nav-link[href="#orders"]').classList.add('active');
            document.getElementById('orders').classList.add('show', 'active');
        })
        .catch(error => {
            console.error('Error loading orders:', error);
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Failed to load orders. Please try again.'
            });
        });
    }

    // Existing functions (unchanged)
    function copyReferralCode() {
        let referralInput = document.getElementById("referralCode");
        if (!referralInput.value) {
            Swal.fire({
                icon: "warning",
                title: "No Referral Code",
                text: "There is no referral code available to copy.",
            });
            return;
        }
        referralInput.select();
        document.execCommand("copy");
        Swal.fire({
            icon: "success",
            title: "Copied!",
            text: "Referral Code has been copied to clipboard.",
            showConfirmButton: false,
            timer: 1500
        });
    }

    function confirmDelete(addressId) {
        Swal.fire({
            title: 'Are you sure?',
            text: 'This action cannot be undone.',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#000',
            cancelButtonColor: '#6c757d',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(`/deleteAddress/${addressId}`, {
                    method: 'DELETE',
                    headers: { 'Content-Type': 'application/json' }
                })
                .then(response => {
                    if (response.ok) {
                        Swal.fire('Deleted!', 'The address has been deleted.', 'success')
                            .then(() => { window.location.href = '/Profile'; });
                    } else {
                        Swal.fire('Error!', 'Failed to delete the address.', 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire('Error!', error.message || 'An error occurred.', 'error');
                });
            }
        });
    }

    function viewOrderDetails(orderId) {
        window.location.href = `/order-details/${orderId}`;
    }
</script>

    <%- include('../partials/users/footer') %>