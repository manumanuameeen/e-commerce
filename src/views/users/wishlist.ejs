<%- include('../partials/users/header') %>
    <style>
        .wishlist-container {
            max-width: 1000px;
            /* Reduced from 1200px */
            margin: 40px auto;
            padding: 0 20px;
            padding-top: 100px;
        }

        .wishlist-header {
            text-align: center;
            margin-bottom: 30px;
            padding: 20px 0;
            border-bottom: 1px solid #eee;
        }

        .wishlist-header h1 {
            font-size: 24px;
            color: #333;
            margin: 0;
        }

        .wishlist-count {
            color: #666;
            font-size: 14px;
            margin-top: 5px;
        }

        .wishlist-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            /* Reduced from 300px */
            gap: 20px;
            /* Reduced from 30px */
            padding: 20px 0;
        }

        .wishlist-item {
            background: #fff;
            border: 1px solid #eee;
            border-radius: 8px;
            padding: 15px;
            /* Reduced from 20px */
            text-align: center;
            transition: transform 0.2s;
        }

        .wishlist-item:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        .wishlist-item img {
            max-width: 100%;
            height: 180px;
            /* Added fixed height */
            margin-bottom: 15px;
            object-fit: cover;
        }

        .item-title {
            font-size: 14px;
            /* Reduced from 16px */
            color: #333;
            margin: 8px 0;
        }

        .item-price {
            font-size: 16px;
            /* Reduced from 18px */
            color: #333;
            font-weight: 600;
            margin: 8px 0;
        }

        .move-to-bag {
            background: #1286b4;
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 4px;
            width: 100%;
            margin: 8px 0;
            transition: background 0.3s;
            cursor: pointer;
            font-size: 14px;
        }

        .move-to-bag:hover {
            background: #ff2020;
        }

        .remove-item {
            color: #2a2828;
            text-decoration: underline;
            background: none;
            border: none;
            padding: 5px;
            cursor: pointer;
            font-size: 12px;
            /* background-color: #1286b4; */
            border-radius: 4px;
        }

        .remove-item:hover {
            color: #ff2020;
        }

        /* Color Selection Styles */
        .color-selection {
            margin: 12px 0;
            text-align: left;
        }

        .color-selection label {
            display: block;
            margin-bottom: 6px;
            color: #666;
            font-size: 12px;
        }

        .custom-dropdown {
            position: relative;
            width: 100%;
        }

        .dropdown-selected {
            display: block;
            padding: 8px 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            background-color: white;
            cursor: pointer;
            font-size: 13px;
            color: #666;
        }

        #colorOptions {
            display: none;
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            background: white;
            border: 1px solid #ddd;
            border-top: none;
            border-radius: 0 0 4px 4px;
            z-index: 1000;
        }

        .dropdown-option {
            padding: 8px 12px;
            cursor: pointer;
            font-size: 13px;
            transition: background 0.2s;
        }

        .dropdown-option:hover {
            background-color: #f5f5f5;
        }

        .dropdown-option[data-selected="true"] {
            background-color: #f0f0f0;
        }

        @media (max-width: 768px) {
            .wishlist-grid {
                grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
                gap: 15px;
            }
        }
    </style>

    <div class="wishlist-container">
        <div class="wishlist-header">
            <h1><strong>My Wishlist</strong></h1>
            <div class="wishlist-count">
                <%= wishlist ? wishlist.length : 0 %> items
            </div>
        </div>

        <% if (!wishlist || wishlist.length===0) { %>
            <div class="empty-wishlist">
                <h2>Your wishlist is empty</h2>
                <p>Add items you love to your wishlist. Review them anytime and easily move them to the bag.</p>
                <a href="/shop" class="shop-now-btn">Continue Shopping</a>
            </div>
            <% } else { %>
                <div class="wishlist-grid">
                    <% wishlist.forEach((item, index) => { %>
                        <div class="wishlist-item">
                            <a href="/productDetails?id=<%= item.productId %>"></a>
                            <img src="/uploads/re-image/<%= item.productId.productImage[0] %>" 
                                 alt="<%= item.productId.productName %>">
                            <h3 class="item-title">
                                <%= item.productId.productName %>
                            </h3>
                            <p class="item-price">â‚¹<%= item.productId.salePrice.toLocaleString('en-IN') %></p>
                
                            <form class="add-to-cart-form" 
                                  onsubmit="return addToCart(event, '<%= item.productId._id %>', '<%= item.productId.productName %>', '<%= index %>')">
                                <div class="color-selection">
                                    <label for="colorSelect_<%= index %>">Select Color:</label>
                                    <div class="custom-dropdown" id="colorDropdown_<%= index %>">
                                        <span class="dropdown-selected" onclick="toggleDropdown('<%= index %>')">-- Choose Color --</span>
                                        <div id="colorOptions_<%= index %>" class="color-options">
                                            <% item.productId.colorVarients.forEach(function(variant) { %>
                                                <div class="dropdown-option" 
                                                     data-value="<%= variant.color %>"
                                                     data-quantity="<%= variant.quantity %>"
                                                     onclick="selectColor('<%= variant.color %>', '<%= index %>')">
                                                    <%= variant.color %> - <%= variant.quantity %> left
                                                </div>
                                            <% }); %>
                                        </div>
                                    </div>
                                </div>
                                <input type="hidden" id="selectedColor_<%= index %>" name="color" value="">
                                <input type="hidden" id="quantity_<%= index %>" name="quantity" value="1" class="input-number">
                                <button type="submit" class="move-to-bag">
                                    MOVE TO CART
                                </button>
                            </form>
                
                            <button class="remove-item" onclick="removeFromWishlist('<%= item.productId._id %>')">
                                Remove
                            </button>
                        </div>
                    <% }); %>
                </div>
                <% } %>
    </div>

    <script>
      
        function toggleDropdown(index) {
        const dropdowns = document.querySelectorAll('.color-options');
        dropdowns.forEach((dropdown, i) => {
            if (i !== index) {
                dropdown.style.display = 'none';
            }
        });
 

        const dropdown = document.getElementById(`colorOptions_${index}`);
        dropdown.style.display = dropdown.style.display === 'block' ? 'none' : 'block';
    }

    function selectColor(color, index) {
        const selectedColorInput = document.getElementById(`selectedColor_${index}`);
        const dropdownSelected = document.querySelector(`#colorDropdown_${index} .dropdown-selected`);
        const dropdownOptions = document.querySelectorAll(`#colorOptions_${index} .dropdown-option`);

        selectedColorInput.value = color;
        dropdownSelected.innerText = color;

        document.getElementById(`colorOptions_${index}`).style.display = 'none';

        dropdownOptions.forEach(option => {
            option.setAttribute('data-selected', option.getAttribute('data-value') === color ? 'true' : 'false');
        });
    }

    document.addEventListener('click', function(event) {
        const dropdowns = document.querySelectorAll('.custom-dropdown');
        dropdowns.forEach(dropdown => {
            if (!dropdown.contains(event.target)) {
                dropdown.querySelector('.color-options').style.display = 'none';
            }
        });
    });

    function addToCart(event, productId, productName, index) {
        event.preventDefault();

        const selectedColor = document.getElementById(`selectedColor_${index}`).value;
        const quantity = 1; 

        if (!selectedColor) {
            Swal.fire({
                text: 'Please select a color before adding to cart.',
                icon: 'warning'
            });
            return false;
        }

        fetch('/addToCart', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                productId: productId,
                quantity: quantity,
                colorVariant: selectedColor
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.status) {
                Swal.fire({
                    text: data.message || 'Product added to cart successfully!',
                    icon: 'success',
                    showConfirmButton: false,
                    timer: 1500
                }).then(() => {
                    removeFromWishlist(productId);
                });
            } else {
                Swal.fire({
                    text: data.message || 'Failed to add product to cart.',
                    icon: 'error'
                });
            }
        })
        .catch(error => {
            console.error('Add to Cart Error:', error);
            Swal.fire({
                text: 'An error occurred while adding the product to cart.',
                icon: 'error'
            });
        });

        return false;
    }


        function removeFromWishlist(productId) {
            Swal.fire({
                title: 'Do you want?',
                text: "Remove this item from your wishlist?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, remove it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch('/removeFromWishlist', {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ productId })
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.status) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Removed!',
                                    text: 'Item has been removed from your wishlist',
                                    showConfirmButton: false,
                                    timer: 1500
                                }).then(() => {
                                    location.reload();
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops...',
                                    text: data.message || 'Something went wrong!'
                                });
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Something went wrong!'
                            });
                        });
                }
            });
        }
    </script>

    <%- include('../partials/users/footer') %>