<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Details</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-color: #10b981;
            --border-color: #e5e7eb;
            --background-color: #f8fafc;
            --text-primary: #1f2937;
            --text-secondary: #4b5563;
        }

        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background-color: var(--background-color);
            color: var(--text-primary);
            line-height: 1.5;
        }

        .container {
            max-width: 1000px;
            margin: 40px auto;
            padding: 0 20px;
        }

        .card {
            background: white;
            border-radius: 16px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            padding: 40px;
            margin-bottom: 24px;
            animation: fadeIn 0.6s ease;
        }

        .success-header {
            text-align: center;
            margin-bottom: 40px;
        }

        .success-icon {
            width: 80px;
            height: 80px;
            background-color: var(--primary-color);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 24px;
            animation: scaleIn 0.5s ease-out;
        }

        .checkmark {
            color: white;
            font-size: 40px;
        }

        h1 {
            font-size: 32px;
            margin-bottom: 12px;
        }

        .subtitle {
            color: var(--text-secondary);
            font-size: 18px;
        }

        .section {
            margin-bottom: 32px;
        }

        .section-header {
            margin-bottom: 24px;
            padding-bottom: 12px;
            border-bottom: 2px solid var(--border-color);
        }

        .section-title {
            font-size: 24px;
        }

        .details-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 24px;
        }

        .detail-item {
            background: #f9fafb;
            padding: 16px;
            border-radius: 8px;
            animation: fadeIn 0.5s ease;
        }

        .detail-label {
            color: var(--text-secondary);
            font-size: 14px;
            margin-bottom: 4px;
        }

        .detail-value {
            font-size: 16px;
            font-weight: 500;
        }

        .table-container {
            overflow-x: auto;
            border-radius: 8px;
            border: 1px solid var(--border-color);
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th,
        td {
            padding: 16px;
            text-align: left;
            border-bottom: 1px solid var(--border-color);
        }

        th {
            background-color: #f9fafb;
            font-weight: 500;
            color: var(--text-secondary);
        }

        .status-badge {
            padding: 6px 12px;
            border-radius: 9999px;
            font-size: 14px;
            font-weight: 500;
        }

        .status-cancelled {
            background-color: #fee2e2;
            color: #991b1b;
        }

        .status-delivered {
            background-color: #d1fae5;
            color: #065f46;
        }

        .button-container {
            display: flex;
            gap: 16px;
            justify-content: center;
            margin-top: 32px;
        }

        .button {
            padding: 12px 24px;
            border-radius: 8px;
            font-weight: 500;
            text-decoration: none;
            cursor: pointer;
            border: none;
            transition: all 0.2s ease;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }

        .button-primary {
            background-color: var(--primary-color);
            color: white;
        }

        .button-secondary {
            background-color: #f3f4f6;
            color: var(--text-primary);
        }

        .toast {
            position: fixed;
            bottom: 24px;
            right: 24px;
            background: #323232;
            color: white;
            padding: 16px 24px;
            border-radius: 8px;
            display: none;
            animation: slideIn 0.3s ease;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes scaleIn {
            from {
                transform: scale(0);
            }

            to {
                transform: scale(1);
            }
        }

        @keyframes slideIn {
            from {
                transform: translateX(100%);
            }

            to {
                transform: translateX(0);
            }
        }

        @media (max-width: 768px) {
            .details-grid {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        @media (max-width: 480px) {
            .details-grid {
                grid-template-columns: 1fr;
            }

            .button-container {
                flex-direction: column;
            }
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="card" id="invoice-content">
            <div class="success-header">
                <div class="success-icon">
                    <span class="checkmark">✓</span>
                </div>
                <h1>Order Confirmed!</h1>
                <p class="subtitle">Thank you for your purchase. Your order has been successfully processed.</p>
            </div>

            <div class="section">
                <div class="section-header">
                    <h2 class="section-title">Order Details</h2>
                </div>
                <div class="details-grid">
                    <div class="detail-item">
                        <div class="detail-label">Order ID</div>
                        <div class="detail-value">#<%= order.orderId %>
                        </div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Order Date</div>
                        <div class="detail-value">
                            <%= new Date(order.createdAt).toLocaleDateString() %>
                        </div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Payment Method</div>
                        <div class="detail-value">
                            <%= order.paymentMethod %>
                        </div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Total Amount</div>
                        <div class="detail-value">₹<%= order.totalPrice.toFixed(2) %>
                        </div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Discount</div>
                        <div class="detail-value">₹<%= order.discount.toFixed(2) %>
                        </div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Final Amount</div>
                        <div class="detail-value">₹<%= order.finalAmount.toFixed(2) %>
                        </div>
                    </div>
                </div>
            </div>

            <div class="section">
                <div class="section-header">
                    <h2 class="section-title">Order Summary</h2>
                </div>
                <div class="table-container">
                    <table>
                        <thead>
                            <tr>
                                <th>Product</th>
                                <th>Quantity</th>
                                <th>Price</th>
                                <th>Total</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% order.orderIteams.forEach(item=> { %>
                                <tr>
                                    <td>
                                        <%= item.productName %>
                                    </td>
                                    <td>
                                        <%= item.quantity %>
                                    </td>
                                    <td>₹<%= item.price.toFixed(2) %>
                                    </td>
                                    <td>₹<%= (item.price * item.quantity).toFixed(2) %>
                                    </td>
                                    <td>
                                        <span
                                            class="status-badge <%= item.status.toLowerCase() === 'cancelled' ? 'status-cancelled' : 'status-delivered' %>">
                                            <%= item.status %>
                                        </span>
                                    </td>
                                </tr>
                                <% }); %>
                        </tbody>
                    </table>
                </div>
            </div>

            <div class="button-container">
                <a href="/" class="button button-secondary">
                    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path>
                        <polyline points="9 22 9 12 15 12 15 22"></polyline>
                    </svg>
                    Back to Home
                </a>
                <button id="downloadInvoice" class="button button-primary " onclick="generateInvoice('<%=order._id%>')">
                    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
                        <polyline points="7 10 12 15 17 10"></polyline>
                        <line x1="12" y1="15" x2="12" y2="3"></line>
                    </svg>
                    Download Invoice
                </button>
            </div>
        </div>
    </div>

    <div id="toast" class="toast">
        Preparing your invoice...
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>

        window.jsPDF = window.jspdf.jsPDF;




        function generateInvoice(orderId) {
            Swal.fire({
                title: 'Generating Invoice',
                text: 'Please wait...',
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });

            fetch(`/getOrderDetails/${orderId}`)
                .then(response => response.json())
                .then(data => {
                    if (!data.success) {
                        throw new Error(data.message || 'Failed to fetch order details');
                    }

                    createInvoicePDF(data.order, data.userData);
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: error.message || 'Failed to generate invoice'
                    });
                });
        }

        function createInvoicePDF(order, userData) {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF({
                orientation: 'portrait',
                unit: 'mm',
                format: 'a4'
            });

            doc.setProperties({
                title: `Invoice-${order.orderId}`,
                subject: 'Order Invoice',
                author: 'Aranoz',
                creator: 'Aranoz E-commerce'
            });

            const pageWidth = doc.internal.pageSize.getWidth();
            const pageHeight = doc.internal.pageSize.getHeight();
            const margin = 15;
            const usableWidth = pageWidth - (margin * 2);

            // Colors
            doc.setDrawColor(241, 90, 36);
            doc.setFillColor(241, 90, 36);

            doc.rect(0, 0, pageWidth, 15, 'F');

            doc.rect(0, pageHeight - 15, pageWidth, 15, 'F');



            doc.setFontSize(11);
            doc.text('Aranoz', margin + 0, 30);
            doc.setFontSize(9);
            doc.text('Perinthalmanna Street', margin + 0, 35);
            doc.text('Phone: +91 12345 67890', margin + 0, 40);


            doc.setFontSize(20);
            doc.setTextColor(100, 100, 100);
            doc.text('INVOICE', pageWidth - margin - 30, 35);


            doc.setFontSize(9);
            doc.setTextColor(100, 100, 100);
            doc.text('DATE', pageWidth - margin - 30, 45);
            doc.line(pageWidth - margin - 30, 46, pageWidth - margin, 46);
            doc.text(new Date(order.createdAt).toLocaleDateString(), pageWidth - margin - 30, 50);


            doc.setFontSize(8);

            if (order.status === 'Payment Pending') {
                doc.setTextColor(255, 0, 0);
            } else {
                doc.setTextColor(0, 128, 0);
            }

            doc.text(`Payment terms: ${order.status === 'Payment Pending' ? 'Due immediately' : 'Paid'}`, margin, 70);

            doc.setFontSize(10);
            doc.setTextColor(50, 50, 50);
            doc.text('BILL TO', margin, 80);
            doc.setFontSize(9);
            doc.text(order.address?.name || 'Customer Name', margin, 85);
            doc.text(order.address?.street || 'Customer Address', margin, 90);
            doc.text(`${order.address?.city || 'City'}, ${order.address?.state || 'State'} ${order.address?.pincode || 'Pincode'}`, margin, 95);
            doc.text(order.address?.phone || 'Phone', margin, 100);
            doc.text(userData?.email || 'Email', margin, 105);

            doc.setFontSize(10);
            doc.text('SHIP TO', pageWidth / 2, 80);
            doc.setFontSize(9);
            doc.text(order.address?.name || 'Customer Name', pageWidth / 2, 85);
            doc.text(order.address?.street || 'Customer Address', pageWidth / 2, 90);
            doc.text(`${order.address?.city || 'City'}, ${order.address?.state || 'State'} ${order.address?.pincode || 'Pincode'}`, pageWidth / 2, 95);
            doc.text(order.address?.phone || 'Phone', pageWidth / 2, 100);

            const tableTop = 115;
            const tableWidth = usableWidth;
            const colWidth = [tableWidth * 0.45, tableWidth * 0.15, tableWidth * 0.2, tableWidth * 0.2];

            doc.setFillColor(241, 90, 36);
            doc.rect(margin, tableTop, tableWidth, 8, 'F');
            doc.setTextColor(255, 255, 255);
            doc.setFontSize(9);
            doc.text('NAME', margin + 5, tableTop + 5);
            doc.text('QTY', margin + colWidth[0] + 5, tableTop + 5);
            doc.text('UNIT PRICE', margin + colWidth[0] + colWidth[1] + 5, tableTop + 5);
            doc.text('TOTAL', margin + colWidth[0] + colWidth[1] + colWidth[2] + 5, tableTop + 5);

            let yPos = tableTop + 8;
            doc.setTextColor(50, 50, 50);

            order.orderIteams.forEach((item, index) => {
                if (yPos > pageHeight - 60) {
                    doc.addPage();
                    yPos = margin + 10;

                    doc.setDrawColor(241, 90, 36);
                    doc.setFillColor(241, 90, 36);
                    doc.rect(0, 0, pageWidth, 15, 'F');
                    doc.rect(0, pageHeight - 15, pageWidth, 15, 'F');
                }

                doc.setDrawColor(220, 220, 220);
                doc.line(margin, yPos, margin + tableWidth, yPos);
                doc.line(margin, yPos + 10, margin + tableWidth, yPos + 10);
                doc.line(margin, yPos, margin, yPos + 10);
                doc.line(margin + colWidth[0], yPos, margin + colWidth[0], yPos + 10);
                doc.line(margin + colWidth[0] + colWidth[1], yPos, margin + colWidth[0] + colWidth[1], yPos + 10);
                doc.line(margin + colWidth[0] + colWidth[1] + colWidth[2], yPos, margin + colWidth[0] + colWidth[1] + colWidth[2], yPos + 10);
                doc.line(margin + tableWidth, yPos, margin + tableWidth, yPos + 10);

                doc.setFontSize(8);
                doc.text(item.productName + (item.color ? ` (${item.color})` : ''), margin + 2, yPos + 5);
                doc.text(item.quantity.toString(), margin + colWidth[0] + 5, yPos + 5);
                doc.text(`${item.price.toFixed(2)}`, margin + colWidth[0] + colWidth[1] + 5, yPos + 5);
                doc.text(`${(item.price * item.quantity).toFixed(2)}`, margin + colWidth[0] + colWidth[1] + colWidth[2] + 5, yPos + 5);

                yPos += 10;
            });

            yPos += 5;
            doc.setFontSize(8);
            doc.text('Remarks / Payment Instructions:', margin, yPos);
            doc.text(order.status === 'Payment Pending' ? 'Payment pending. Please complete payment to process order.' : 'Thank you for your business.', margin, yPos + 5);


            const GST_RATE = 18;

            const taxAmount = (order.totalPrice * GST_RATE) / 100;

            const summaryX = pageWidth - margin - 50;
            doc.setDrawColor(220, 220, 220);

            doc.text('SUBTOTAL', summaryX, yPos);
            doc.text(`${order.totalPrice.toFixed(2)}`, pageWidth - margin - 5, yPos, { align: 'right' });

            yPos += 5;
            doc.text('DISCOUNT', summaryX, yPos);
            doc.text(`${order.discount.toFixed(2)}`, pageWidth - margin - 5, yPos, { align: 'right' });

            yPos += 5;
            doc.text('GST RATE', summaryX, yPos);
            doc.text(`${GST_RATE}%`, pageWidth - margin - 5, yPos, { align: 'right' });

            yPos += 5;
            doc.text('TOTAL TAX', summaryX, yPos);
            doc.text(`${taxAmount.toFixed(2)}`, pageWidth - margin - 5, yPos, { align: 'right' });

            yPos += 5;
            doc.text('SHIPPING/HANDLING', summaryX, yPos);
            doc.text('0.00', pageWidth - margin - 5, yPos, { align: 'right' });

            yPos += 8;
            const finalAmount = order.totalPrice - order.discount + taxAmount;
            doc.setFillColor(253, 233, 233);
            doc.rect(summaryX - 10, yPos - 5, 70, 10, 'F');
            doc.setFontSize(9);
            doc.setTextColor(50, 50, 50);
            doc.text('Balance Due', summaryX, yPos);
            doc.text(`${finalAmount.toFixed(2)}`, pageWidth - margin - 5, yPos, { align: 'right' });
            doc.save(`Invoice-${order.orderId}.pdf`);

            Swal.close();

            Swal.fire({
                icon: 'success',
                title: 'Invoice Generated',
                text: 'Your invoice has been downloaded successfully.'
            });
        }

    </script>
</body>

</html>